# Commands
blockbuster:
    commands:
        # General commands (no SubCommandBase commands)
        director: 
            |
                {l}{6}/{r}director {8}<play|toggle|stop|spawn>{r} {7}<x> <y> <z> [tick]{r}
                
                {r}Start, stop or toggle playback of director block located at {7}<x>{r}, {7}<y>{r}, and {7}<z>{r} (you can use F3 to determine coordinates). There's also {7}spawn{r} action which will spawn idle actors on {7}[tick]{r} tick ({7}[tick]{r} argument used only by this action).

        # Record's commands
        record:
            help: {r}{o}Record command{r}. This command provides few sub-commands for manipulating player recording actions.
            
            add: 
                |
                    {l}{6}/{r}record {8}add{r} {7}<filename> <tick> <action_type> [data_tag]{r}
                    
                    {r}Adds an action to player recording by {7}<filename>{r} at {7}<tick>{r} of type {7}<action_type>{r} with additional data specified in {7}[data_tag]{r}.
            
            get:
                |
                    {l}{6}/{r}record {8}get{r} {7}<filename> <tick>{r}
                    
                    {r}Outputs data tag of action found at {7}<tick>{r} in player recording by filename {7}<filename>{r}.
            
            info:
                |
                    {l}{6}/{r}record {8}info{r} {7}<filename>{r}
                    
                    {r}Outputs information about player recording by filename {7}<filename>{r}, such as saved version of record format, length of the record, etc.
            
            remove:
                |
                    {l}{6}/{r}record {8}remove{r} {7}<filename> <tick> [index]{r}
                    
                    {r}Removes all actions on {7}<tick>{r} in player recording by {7}<filename>{r}. If you'll specify {7}[index]{r}, command will remove only one action in {7}<tick>{r} at {7}[index]{r}.
            
            search:
                |
                    {l}{6}/{r}record {8}search{r} {7}<filename> <action_type> [limit] [output_tags]{r}
                    
                    {r}Searches for actions, optionally limited by {7}[limit]{r}, of given {7}<action_type>{r} and outputs the tick and, optionally output data tag, found in player recording by filename {7}<filename>{r}.

        # Model's commands
        model:
            help: {r}{o}Model command{r}. This command provides sub-commands for managing custom models.
            
            export:
                |
                    {l}{6}/{r}model {8}export{r} {7}<entity_name>{r}
                    
                    {r}Exports model from {7}<entity_name>{r} mob renderer in JSON format that actor use for custom models. This model will be exported into export folder of Blockbuster's config folder.
                    
                    {r}{l}Attention{r}: those models are automatically generated and aren't perfect. You'll need to adjust those models in McME to get best result.
            
            request: 
                |
                    {l}{6}/{r}model {8}request{r}
                    
                    {r}Requests models from the server (including host's models in LAN game).
            
            clear:
                |
                    {l}{6}/{r}model {8}clear{r}
                    
                    {r}Clears the texture cache from loaded skin textures.

        # Action's commands
        action:
            help: {r}{o}Action command{r}. This command provides few sub-commands for managing player recording actions.
            
            clear:
                |
                    {l}{6}/{r}action {8}clear{r}
                    
                    {r}Removes all records on the client (used to force unload client-side records).
            play: 
                |
                    {l}{6}/{r}action {8}play{r} {7}<filename> [name_tag] [model] [skin] [invincibility]{r}
                    
                    {r}Playbacks an action from given {7}<filename>{r}. This sub-command also can receive optional arguments {7}[name]{r} of the actor, his {7}[model]{r} and {7}[skin]{r} and {7}[invincibility]{r} flag ({7}1{r}, {7}0{r}, {7}true{r} or {7}false{r} values).
            record: 
                |
                    {l}{6}/{r}action {8}record{r} {7}<filename> [x] [y] [z]{7}
                    
                    {r}Records an action from current player into given {7}<filename>{r}. You can also optionally specify {7}[x]{f}, {7}[y]{f} and {7}[z]{f} coordinates of director block for which you want to record this recording. Supplying director block coordinates, helps out with synchronizing the actors.
            request: 
                |
                    {l}{6}/{r}action {8}request{r} {7}<filename>{r}
                    
                    {r}Requests an action, named {7}<filename>{r}, to be loaded from server to current client.
            stop: 
                |
                    {l}{6}/{r}action {8}stop{r}
                    
                    {r}Stops the recording of action. If the player didn't record anything, nothing will happen.

        # Camera's commands
        camera:
            help: {r}{o}Camera command{r}. Provides sub-commands for managing camera profile and its camera fixtures.
            
            start: 
                |
                    {l}{6}/{r}camera {8}start{r}
                    
                    {r}Starts a camera profile
            stop: 
                |
                    {l}{6}/{r}camera {8}stop{r}
            
                    {r}Stops currently running camera profile
            new: 
                |
                    {l}{6}/{r}camera {8}new{r} {7}<filename>{r}
                    
                    {r}Creates a new camera profile in current session with given <filename>
            load: 
                |
                    {l}{6}/{r}camera {8}load{r} {7}<filename>{r}
                    
                    {r}Load camera profile
            save: 
                |
                    {l}{6}/{r}camera {8}save{r} {7}[filename]{r}
                    
                    {r}Save camera profile to a file. If the file isn't specified, then this camera profile will be saved to the file that previously was saved or loaded
            clear: 
                |
                    {l}{6}/{r}camera {8}clear{r}
                    
                    {r}Clears the camera profile (removes all fixtures)
            goto: 
                |
                    {l}{6}/{r}camera {8}goto{r} {7}<index> [progress]{r}
                    
                    {r}Teleports you to the camera fixture at {7}<index>{r} index. Optionally you might specify {7}[progress]{r} (from {7}0.0{r} to {7}1.0{r}) argument which will allow you to teleport in the middle of the path or circular fixture.

            default:
                |
                    {l}{6}/{r}camera {8}default{r}
                    
                    {r}Resets camera's {7}Field-Of-View{r} and {7}roll{r} to default values ({7}70.0{r} and {7}0.0{r} degrees).
            fov: 
                |
                    {l}{6}/{r}camera {8}fov{r} {7}[fov]{r}
                    
                    Set or get client's camera {l}Field Of View{r} ({8}fov{r}) setting.
            roll: 
                |
                    {l}{6}/{r}camera {8}roll{r} {7}[roll]{r}
                    
                    {r}Set or get client's camera {7}[roll]{r} (rotation across {7}Z-axis{r}).
            
            rotate:
                |
                    {l}{6}/{r}camera {8}rotate{r} {7}[yaw] [pitch]{r}
                    
                    {r}Set camera's angle based on absolute or relative values. You can set absolute angle of the camera by specifying plain floating point numbers {6}/camera {8}rotate {7}90 90{r}. Or you can provide a relative value by using {7}+{r} or {7}-{r} signs {6}/camera {8}rotate {7}+0.5 -0.5{r}.
            
            step:
                |
                    {l}{6}/{r}camera {8}step{r} {7}[x] [y] [z]{r}
                    
                    {r}Set camera's position based on absolute or relative values. You can set absolute position of the camera by specifying plain floating point numbers {6}/camera {8}step {7}0 4 0{r}. Or you can provide a relative value by using {7}+{r} or {7}-{r} signs {6}/camera {8}step {7}+0 +0.1 +0{r}. It works similar to {6}/tp{r} command.

            fixture:
                add: 
                    |
                        {l}{6}/{r}camera {8}add{r} {7}<idle|path|follow|look|circular> <duration>{r}
                        
                        {r}Creates a new camera fixture at the end of the current camera profile with given type and {7}<duration>{r}.
                edit: 
                    |
                        {l}{6}/{r}camera {8}edit{r} {7}<index> <values...>{r}
                        
                        {r}Edit fixture's values at {7}<index>{r} in currently selected camera profile
                remove: 
                    |
                        {l}{6}/{r}camera {8}remove{r} {7}<index>{r}
                        ยง
                        {r}Remove camera fixture from currently used camera profile at {7}<index>{r}
                duration: 
                    |
                    
                        {l}{6}/{r}camera {8}duration{r} {7}[index] [duration]{r}
                        
                        {r}Set duration in milliseconds to given fixture at given {7}<index>{r}
                
                move: 
                    |
                        {l}{6}/{r}camera {8}move{r} {7}<from> <to>{r}
                        
                        {r}Move camera fixture at {7}<from>{r} index to {7}<to>{r} index in the camera profile
            
            path: 
                help: {r}{o}Camera path sub-command{r}. Provides sub-commands for managing path fixture and its points.
                
                add:
                    |
                        {l}{6}/{r}camera path {8}add{r} {7}<index> [before_point]{r}
                        
                        {r}Adds a point in the path fixture at {7}<index>{r} in the end, or before {7}[before_point]{r} point, if specified.
                
                edit:
                    |
                        {l}{6}/{r}camera path {8}edit{r} {7}<index> <point_index>{r}
                        
                        {r}Edit position of a point at index {7}<point_index>{r} in the path fixture at {7}<index>{r}.
                
                goto:
                    |
                        {l}{6}/{r}camera path {8}goto{r} {7}<index> <point_index>{r}
                        
                        {r}Go to position of a point at index {7}<point_index>{r} in the path fixture at {7}<index>{r}.
                
                move:
                    |
                        {l}{6}/{r}camera path {8}move{r} {7}<index> <from> <to>{r}
                        
                        {r}Move a point at index {7}<from>{r} to {7}<to>{r} in the path fixture at {7}<index>{r}.
                
                remove:
                    |
                        {l}{6}/{r}camera path {8}remove{r} {7}<index> <point_index>{r}
                        
                        {r}Remove a point at index {7}<point_index>{r} from the path fixture at {7}<index>{r}.