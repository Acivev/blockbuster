# Commands
blockbuster:
    commands:
        # General commands (no SubCommandBase commands)
        director: 
            |
                {l}{6}/{r}director {8}<play|toggle|stop|loop|disable_state>{r} {7}<x> <y> <z> [flag]{r}
                
                {r}Воспроизвести, остановить или переключить воспроивзедение в блоке режиссёра в точке {7}<x>{r}, {7}<y>{r}, и {7}<z>{r} (вы можете использовать F3 чтобы установить координаты). Также тут есть закольцовывание {7}loop{r} и {7}disable_state{r} которые позволяет изменить закольцовывание и способность заряжать редстоун посредством {7}[flag]{r} аргумента ({7}true{r} или {7}false{r}).

        # Record's commands
        record:
            help: "{r}{o}Команда съёмки{r}. У этой команды есть под-команды для манипуляций с записями игрока."
            
            add: 
                |
                    {l}{6}/{r}record {8}add{r} {7}<filename> <tick> <action_type> [data_tag]{r}
                    
                    {r}Добавляет действие к записи игрока с именем {7}<filename>{r} в тике {7}<tick>{r} типа {7}<action_type>{r} с дополнительной информацией, указанной в {7}[data_tag]{r}.
            
            clean:
                |
                    {l}{6}/{r}record {8}clean{r} {7}<filename> <property> [value] [from] [to]{r}
                    
                    {r}Эта команда сбрасывает свойство {7}<property>{r} в файле {7}<filename>{r} записи игрока от {7}[from]{r} тика к {7}[to]{r} (не включая {7}[to]{r}) тика в значении, указанном в аргументе {7}[value]{r} (принимает относительные значения) или значение кадра {7}[from]{r} или первого кадра.
            
            dupe:
                |
                    {l}{6}/{r}record {8}dupe{r} {7}<filename> <new_filename>{r}
                    
                    {r}Эта команда дублирует выбранную запись игрока {7}<filename>{r} и переносит её другому игроку в новый файл {7}<new_filename>{r}.
            
            get:
                |
                    {l}{6}/{r}record {8}get{r} {7}<filename> <tick>{r}
                    
                    {r}Выводит дополнительную информацию о действии в тике {7}<tick>{r} в текущем файле игрока {7}<filename>{r}.
            
            info:
                |
                    {l}{6}/{r}record {8}info{r} {7}<filename>{r}
                    
                    {r}Выводит информацию о записи посредством файла {7}<filename>{r}, к примеру формат, версия, длина записи и т.д. и т.п
            
            remove:
                |
                    {l}{6}/{r}record {8}remove{r} {7}<filename> <tick> [index]{r}
                    
                    {r}Убирает все действия в тике {7}<tick>{r} в записи игрока {7}<filename>{r}. Если вы кажете индекс {7}[index]{r}, то команда удалит только действие в тике {7}<tick>{r} с индексом {7}[index]{r}.
            
            search:
                |
                    {l}{6}/{r}record {8}search{r} {7}<filename> <action_type> [limit] [output_tags]{r}
                    
                    {r}Ищет действия; может быть ограничена лимитом {7}[limit]{r} заданного типа {7}<action_type>{r}; также может выводить тики и по желанию выводить дополнительную инофрмацию, которую можно найти в записи игрока {7}<filename>{r}.
                    
            origin:
                |
                    {l}{6}/{r}record {8}origin{r} {7}<filename> [rotation] [x] [y] [z]{r}
                    
                    {r}Эта команда заменяет начало (первый кадр) записи игрока на точку {7}[x] [y] [z]{r} (если все три аргумента указаны) или точку текущей позиции игрока. Вы также можете вращать запись игрока по оси Y в соответствии с первым кадром.
                    
            prolong:
                |
                    {l}{6}/{r}record {8}prolong{r} {7}<filename> [post_delay] [pre_delay]{r}
                    
                    {r}Эта команда позволяет задать задержку в начале и в конце записи игрока {7}<filename>{r}.
                                
            tp:
                |
                    {l}{6}/{r}record {8}tp{r} {7}<filename> [tick]{r}
                    
                    {r}Эта команда телепортирует игрока на первый кадр или, если указано, то в определённый кадр в тике {7}[tick]{r} записи игрока {7}<filename>{r}.

        # Model's commands
        model:
            help: "{r}{o}Команда модели{r}. This command provides sub-commands for managing custom models."
            
            export:
                |
                    {l}{6}/{r}model {8}export{r} {7}<entity_name> [entity_tag]{r}
                    
                    {r}Экспортирует модель из сущности {7}<entity_name>{r} в формате JSON который используется для пользовательских моделей. Эта модель будет экспортирована в папку экспорта в папке конфигурации блокбастера. Также вы можете указать {7}[entity_tag]{r}, чтобы создать модель со специальнрй информацией.
                    
                    {r}{l}Внимание{r}: эти модели сгенерированны автоматически и они не идеальны.. Чтобы достичь лучшего результата, настройте модели в редакторе моделей.
            
            clear:
                |
                    {l}{6}/{r}model {8}clear{r} {7}[path]{r}
                    
                    {r}Очищает кэш текстур из загруженных скинов блокбастера. Если указан {7}[path]{r} префикс, то команда очистит только текстуры, начинающиеся с этого префикса {7}[path]{r}.
            
            reload:
                |
                    {l}{6}/{r}model {8}reload{r} {7}[force]{r}
                    
                    {r}Принуждает сервер и клиент перезагрузить модели (для пользователей-операторов перезагружается только сервер) с дополнительным аргументом принуждения {7}[force]{r} который при условии {7}true{r} перезагрузит всё кроме кэшированных немодифицированных моделей.
                    
            replace_texture:
                |
                    {l}{6}/{r}model {8}replace_texture{r} {7}<target> [replace]{r}
                    
                    {r}Заменяет текстуру из прежней директории {7}<target>{r} текстурой из новой директории {7}[replace]{r}. Если аргумент {7}[replace]{r} не указан, то оригинальная текстура {7}<target>{r} будет восстановлена.

        # Action's commands
        action:
            help: "{r}{o}Команда действия{r}. У этой команды есть под-команды для манипуляций с записями игрока."
            
            clear:
                |
                    {l}{6}/{r}action {8}clear{r}
                    
                    {r}Убирает все записи в клиенте (используется для ручной выгрузки записей).
            play: 
                |
                    {l}{6}/{r}action {8}play{r} {7}<filename> [name_tag] [model] [skin] [invincibility]{r}
                    
                    {r}Воспроизводит действие из заданного файла {7}<filename>{r}. Эта под-команда также имеет дополнительные аргументы имени {7}[name]{r} актёра, его модели {7}[model]{r}, скина {7}[skin]{r} и параметра неузвимости {7}[invincibility]{r} - {7}1{r}, {7}0{r}, значения {7}true{r} или {7}false{r}.
            record: 
                |
                    {l}{6}/{r}action {8}record{r} {7}<filename> [x] [y] [z]{7}
                    
                    {r}Записывает действия текущего игрока в файл с именем {7}<filename>{r}. Также вы можете указать {7}[x]{f}, {7}[y]{f} и {7}[z]{f} - координаты блока режиссёра в который вы хотите сохранить запись. Указание координат помогает с синхронизацией актеров.
            request: 
                |
                    {l}{6}/{r}action {8}request{r} {7}<filename>{r}
                    
                    {r}Запрашивает действие с именем {7}<filename>{r} для загрузки с сервера на клиент.
            stop: 
                |
                    {l}{6}/{r}action {8}stop{r}
                    
                    {r}Останавливает запись действий. Если игрок ничего не записывал, то ничего и не случится.